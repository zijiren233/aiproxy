definitions:
  channeltype.AdaptorMeta:
    properties:
      defaultBaseUrl:
        type: string
      keyHelp:
        type: string
      name:
        type: string
    type: object
  controller.AddChannelRequest:
    properties:
      base_url:
        type: string
      config:
        $ref: '#/definitions/model.ChannelConfig'
      key:
        type: string
      model_mapping:
        additionalProperties:
          type: string
        type: object
      models:
        items:
          type: string
        type: array
      name:
        type: string
      priority:
        type: integer
      sets:
        items:
          type: string
        type: array
      status:
        type: integer
      type:
        type: integer
    type: object
  controller.AddTokenRequest:
    properties:
      expiredAt:
        type: integer
      models:
        items:
          type: string
        type: array
      name:
        type: string
      quota:
        type: number
      subnets:
        items:
          type: string
        type: array
    type: object
  controller.BuiltinModelConfig:
    properties:
      config:
        additionalProperties: {}
        type: object
      created_at:
        type: string
      exclude_from_tests:
        type: boolean
      image_prices:
        additionalProperties:
          type: number
        type: object
      model:
        type: string
      owner:
        $ref: '#/definitions/model.ModelOwner'
      price:
        $ref: '#/definitions/model.Price'
      rpm:
        type: integer
      tpm:
        type: integer
      type:
        $ref: '#/definitions/mode.Mode'
      updated_at:
        type: string
    type: object
  controller.CreateGroupRequest:
    properties:
      available_set:
        items:
          type: string
        type: array
      rpm_ratio:
        type: number
      tpm_ratio:
        type: number
    type: object
  controller.GetModelConfigsByModelsContainsRequest:
    properties:
      models:
        items:
          type: string
        type: array
    type: object
  controller.GroupResponse:
    properties:
      accessed_at:
        type: string
      available_sets:
        items:
          type: string
        type: array
      created_at:
        type: string
      id:
        type: string
      request_count:
        type: integer
      rpm_ratio:
        type: number
      status:
        type: integer
      tpm_ratio:
        type: number
      used_amount:
        type: number
    type: object
  controller.ImportChannelFromOneAPIRequest:
    properties:
      dsn:
        type: string
    type: object
  controller.OpenAIModelPermission:
    properties:
      allow_create_engine:
        type: boolean
      allow_fine_tuning:
        type: boolean
      allow_logprobs:
        type: boolean
      allow_sampling:
        type: boolean
      allow_search_indices:
        type: boolean
      allow_view:
        type: boolean
      created:
        type: integer
      group:
        type: string
      id:
        type: string
      is_blocking:
        type: boolean
      object:
        type: string
      organization:
        type: string
    type: object
  controller.OpenAIModels:
    properties:
      created:
        type: integer
      id:
        type: string
      object:
        type: string
      owned_by:
        type: string
      parent:
        type: string
      permission:
        items:
          $ref: '#/definitions/controller.OpenAIModelPermission'
        type: array
      root:
        type: string
    type: object
  controller.SaveGroupModelConfigRequest:
    properties:
      image_prices:
        additionalProperties:
          type: number
        type: object
      model:
        type: string
      override_limit:
        type: boolean
      override_price:
        type: boolean
      price:
        $ref: '#/definitions/model.Price'
      rpm:
        type: integer
      tpm:
        type: integer
    type: object
  controller.SaveModelConfigsRequest:
    properties:
      config:
        additionalProperties: {}
        type: object
      created_at:
        type: string
      exclude_from_tests:
        type: boolean
      image_prices:
        additionalProperties:
          type: number
        type: object
      model:
        type: string
      owner:
        $ref: '#/definitions/model.ModelOwner'
      price:
        $ref: '#/definitions/model.Price'
      rpm:
        type: integer
      tpm:
        type: integer
      type:
        $ref: '#/definitions/mode.Mode'
      updated_at:
        type: string
    type: object
  controller.StatusData:
    properties:
      startTime:
        type: integer
    type: object
  controller.TestResult:
    properties:
      data:
        $ref: '#/definitions/model.ChannelTest'
      message:
        type: string
      success:
        type: boolean
    type: object
  controller.TokenResponse:
    properties:
      accessed_at:
        type: string
      created_at:
        type: string
      expired_at:
        type: string
      group:
        type: string
      id:
        type: integer
      key:
        type: string
      models:
        items:
          type: string
        type: array
      name:
        type: string
      quota:
        type: number
      request_count:
        type: integer
      status:
        type: integer
      subnets:
        items:
          type: string
        type: array
      used_amount:
        type: number
    type: object
  controller.UpdateChannelStatusRequest:
    properties:
      status:
        type: integer
    type: object
  controller.UpdateGroupRPMRatioRequest:
    properties:
      rpm_ratio:
        type: number
    type: object
  controller.UpdateGroupStatusRequest:
    properties:
      status:
        type: integer
    type: object
  controller.UpdateGroupTPMRatioRequest:
    properties:
      tpm_ratio:
        type: number
    type: object
  controller.UpdateGroupsStatusRequest:
    properties:
      groups:
        items:
          type: string
        type: array
      status:
        type: integer
    type: object
  controller.UpdateTokenNameRequest:
    properties:
      name:
        type: string
    type: object
  controller.UpdateTokenStatusRequest:
    properties:
      status:
        type: integer
    type: object
  github_com_labring_aiproxy_model.Usage:
    properties:
      cache_creation_tokens:
        type: integer
      cached_tokens:
        type: integer
      input_tokens:
        type: integer
      output_tokens:
        type: integer
      total_tokens:
        type: integer
    type: object
  github_com_labring_aiproxy_relay_model.Usage:
    properties:
      completion_tokens:
        type: integer
      prompt_tokens:
        type: integer
      prompt_tokens_details:
        $ref: '#/definitions/model.PromptTokensDetails'
      total_tokens:
        type: integer
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  middleware.APIResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  mode.Mode:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    type: integer
    x-enum-varnames:
    - Unknown
    - ChatCompletions
    - Completions
    - Embeddings
    - Moderations
    - ImagesGenerations
    - Edits
    - AudioSpeech
    - AudioTranscription
    - AudioTranslation
    - Rerank
    - ParsePdf
  model.Audio:
    properties:
      format:
        type: string
      voice:
        type: string
    type: object
  model.Channel:
    properties:
      balance:
        type: number
      balance_threshold:
        type: number
      balance_updated_at:
        type: string
      base_url:
        type: string
      channel_tests:
        items:
          $ref: '#/definitions/model.ChannelTest'
        type: array
      config:
        $ref: '#/definitions/model.ChannelConfig'
      created_at:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      enabled_auto_balance_check:
        type: boolean
      id:
        type: integer
      key:
        type: string
      last_test_error_at:
        type: string
      model_mapping:
        additionalProperties:
          type: string
        type: object
      models:
        items:
          type: string
        type: array
      name:
        type: string
      priority:
        type: integer
      request_count:
        type: integer
      sets:
        items:
          type: string
        type: array
      status:
        type: integer
      type:
        type: integer
      used_amount:
        type: number
    type: object
  model.ChannelConfig:
    properties:
      split_think:
        type: boolean
    type: object
  model.ChannelTest:
    properties:
      actual_model:
        type: string
      channel_id:
        type: integer
      channel_name:
        type: string
      channel_type:
        type: integer
      code:
        type: integer
      mode:
        $ref: '#/definitions/mode.Mode'
      model:
        type: string
      response:
        type: string
      success:
        type: boolean
      test_at:
        type: string
      took:
        type: number
    type: object
  model.ChartData:
    properties:
      cache_creation_tokens:
        type: integer
      cached_tokens:
        type: integer
      exception_count:
        type: integer
      input_tokens:
        type: integer
      output_tokens:
        type: integer
      request_count:
        type: integer
      timestamp:
        type: integer
      total_tokens:
        type: integer
      used_amount:
        type: number
    type: object
  model.DashboardResponse:
    properties:
      cache_creation_tokens:
        type: integer
      cached_tokens:
        type: integer
      channels:
        items:
          type: integer
        type: array
      chart_data:
        items:
          $ref: '#/definitions/model.ChartData'
        type: array
      exception_count:
        type: integer
      input_tokens:
        type: integer
      output_tokens:
        type: integer
      rpm:
        type: integer
      total_count:
        type: integer
      total_tokens:
        type: integer
      tpm:
        type: integer
      used_amount:
        type: number
    type: object
  model.Document:
    properties:
      text:
        type: string
    type: object
  model.EmbeddingRequest:
    properties:
      dimensions:
        type: integer
      encoding_format:
        type: string
      input:
        type: string
      model:
        type: string
    type: object
  model.EmbeddingResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.EmbeddingResponseItem'
        type: array
      model:
        type: string
      object:
        type: string
      usage:
        $ref: '#/definitions/github_com_labring_aiproxy_relay_model.Usage'
    type: object
  model.EmbeddingResponseItem:
    properties:
      embedding:
        items:
          type: number
        type: array
      index:
        type: integer
      object:
        type: string
    type: object
  model.Function:
    properties:
      arguments:
        type: string
      description:
        type: string
      name:
        type: string
      parameters: {}
    type: object
  model.GeneralOpenAIRequest:
    properties:
      audio:
        $ref: '#/definitions/model.Audio'
      dimensions:
        type: integer
      encoding_format:
        type: string
      frequency_penalty:
        type: number
      function_call: {}
      functions: {}
      input: {}
      instruction:
        type: string
      logit_bias: {}
      logprobs:
        type: boolean
      max_completion_tokens:
        type: integer
      max_tokens:
        type: integer
      messages:
        items:
          $ref: '#/definitions/model.Message'
        type: array
      metadata: {}
      modalities:
        items:
          type: string
        type: array
      model:
        type: string
      "n":
        type: integer
      num_ctx:
        type: integer
      parallel_tool_calls:
        type: boolean
      prediction: {}
      presence_penalty:
        type: number
      prompt: {}
      quality:
        type: string
      response_format:
        $ref: '#/definitions/model.ResponseFormat'
      seed:
        type: number
      service_tier:
        type: string
      size:
        type: string
      stop: {}
      store:
        type: boolean
      stream:
        type: boolean
      stream_options:
        $ref: '#/definitions/model.StreamOptions'
      style:
        type: string
      temperature:
        type: number
      tool_choice: {}
      tools:
        items:
          $ref: '#/definitions/model.Tool'
        type: array
      top_k:
        type: integer
      top_logprobs:
        type: integer
      top_p:
        type: number
      user:
        type: string
    type: object
  model.GetGroupLogsResult:
    properties:
      channels:
        items:
          type: integer
        type: array
      logs:
        items:
          $ref: '#/definitions/model.Log'
        type: array
      models:
        items:
          type: string
        type: array
      token_names:
        items:
          type: string
        type: array
      total:
        type: integer
    type: object
  model.GetLogsResult:
    properties:
      channels:
        items:
          type: integer
        type: array
      logs:
        items:
          $ref: '#/definitions/model.Log'
        type: array
      total:
        type: integer
    type: object
  model.Group:
    properties:
      available_sets:
        items:
          type: string
        type: array
      created_at:
        type: string
      id:
        type: string
      request_count:
        type: integer
      rpm_ratio:
        type: number
      status:
        type: integer
      tpm_ratio:
        type: number
      used_amount:
        type: number
    type: object
  model.GroupDashboardResponse:
    properties:
      cache_creation_tokens:
        type: integer
      cached_tokens:
        type: integer
      channels:
        items:
          type: integer
        type: array
      chart_data:
        items:
          $ref: '#/definitions/model.ChartData'
        type: array
      exception_count:
        type: integer
      input_tokens:
        type: integer
      models:
        items:
          type: string
        type: array
      output_tokens:
        type: integer
      rpm:
        type: integer
      token_names:
        items:
          type: string
        type: array
      total_count:
        type: integer
      total_tokens:
        type: integer
      tpm:
        type: integer
      used_amount:
        type: number
    type: object
  model.GroupModelConfig:
    properties:
      group_id:
        type: string
      image_prices:
        additionalProperties:
          type: number
        type: object
      model:
        type: string
      override_limit:
        type: boolean
      override_price:
        type: boolean
      price:
        $ref: '#/definitions/model.Price'
      rpm:
        type: integer
      tpm:
        type: integer
    type: object
  model.ImageData:
    properties:
      b64_json:
        type: string
      revised_prompt:
        type: string
      url:
        type: string
    type: object
  model.ImageRequest:
    properties:
      model:
        type: string
      "n":
        type: integer
      prompt:
        type: string
      quality:
        type: string
      response_format:
        type: string
      size:
        type: string
      style:
        type: string
      user:
        type: string
    type: object
  model.ImageResponse:
    properties:
      created:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.ImageData'
        type: array
    type: object
  model.JSONSchema:
    properties:
      description:
        type: string
      name:
        type: string
      schema:
        additionalProperties: true
        type: object
      strict:
        type: boolean
    type: object
  model.Log:
    properties:
      channel:
        type: integer
      code:
        type: integer
      content:
        type: string
      created_at:
        type: string
      downstream_result:
        type: boolean
      endpoint:
        type: string
      group:
        type: string
      id:
        type: integer
      ip:
        type: string
      mode:
        type: integer
      model:
        type: string
      price:
        $ref: '#/definitions/model.Price'
      request_at:
        type: string
      request_detail:
        $ref: '#/definitions/model.RequestDetail'
      request_id:
        type: string
      retry_at:
        type: string
      retry_times:
        type: integer
      timestamp_trunc_by_day:
        type: integer
      timestamp_trunc_by_hour:
        type: integer
      token_id:
        type: integer
      token_name:
        type: string
      ttfb_milliseconds:
        type: integer
      usage:
        $ref: '#/definitions/github_com_labring_aiproxy_model.Usage'
      used_amount:
        type: number
    type: object
  model.Message:
    properties:
      content: {}
      name:
        type: string
      reasoning_content:
        type: string
      role:
        type: string
      tool_call_id:
        type: string
      tool_calls:
        items:
          $ref: '#/definitions/model.Tool'
        type: array
    type: object
  model.ModelConfig:
    properties:
      config:
        additionalProperties: {}
        type: object
      created_at:
        type: string
      exclude_from_tests:
        type: boolean
      image_prices:
        additionalProperties:
          type: number
        type: object
      model:
        type: string
      owner:
        $ref: '#/definitions/model.ModelOwner'
      price:
        $ref: '#/definitions/model.Price'
      rpm:
        type: integer
      tpm:
        type: integer
      type:
        $ref: '#/definitions/mode.Mode'
      updated_at:
        type: string
    type: object
  model.ModelCostRank:
    properties:
      cache_creation_tokens:
        type: integer
      cached_tokens:
        type: integer
      input_tokens:
        type: integer
      model:
        type: string
      output_tokens:
        type: integer
      total:
        type: integer
      total_tokens:
        type: integer
      used_amount:
        type: number
    type: object
  model.ModelOwner:
    enum:
    - openai
    - alibaba
    - tencent
    - xunfei
    - deepseek
    - moonshot
    - minimax
    - baidu
    - google
    - baai
    - funaudiollm
    - doubao
    - fishaudio
    - chatglm
    - stabilityai
    - netease
    - ai360
    - anthropic
    - meta
    - baichuan
    - mistral
    - openchat
    - microsoft
    - defog
    - nexusflow
    - cohere
    - huggingface
    - lingyiwanwu
    - stepfun
    - xai
    - doc2x
    type: string
    x-enum-varnames:
    - ModelOwnerOpenAI
    - ModelOwnerAlibaba
    - ModelOwnerTencent
    - ModelOwnerXunfei
    - ModelOwnerDeepSeek
    - ModelOwnerMoonshot
    - ModelOwnerMiniMax
    - ModelOwnerBaidu
    - ModelOwnerGoogle
    - ModelOwnerBAAI
    - ModelOwnerFunAudioLLM
    - ModelOwnerDoubao
    - ModelOwnerFishAudio
    - ModelOwnerChatGLM
    - ModelOwnerStabilityAI
    - ModelOwnerNetease
    - ModelOwnerAI360
    - ModelOwnerAnthropic
    - ModelOwnerMeta
    - ModelOwnerBaichuan
    - ModelOwnerMistral
    - ModelOwnerOpenChat
    - ModelOwnerMicrosoft
    - ModelOwnerDefog
    - ModelOwnerNexusFlow
    - ModelOwnerCohere
    - ModelOwnerHuggingFace
    - ModelOwnerLingyiWanwu
    - ModelOwnerStepFun
    - ModelOwnerXAI
    - ModelOwnerDoc2x
  model.Option:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  model.ParsePdfResponse:
    properties:
      markdown:
        type: string
      pages:
        type: integer
    type: object
  model.Price:
    properties:
      cache_creation_price:
        type: number
      cached_price:
        type: number
      input_price:
        type: number
      output_price:
        type: number
    type: object
  model.PromptTokensDetails:
    properties:
      cache_creation_tokens:
        type: integer
      cached_tokens:
        type: integer
    type: object
  model.RequestDetail:
    properties:
      id:
        type: integer
      log_id:
        type: integer
      request_body:
        type: string
      request_body_truncated:
        type: boolean
      response_body:
        type: string
      response_body_truncated:
        type: boolean
    type: object
  model.RerankMeta:
    properties:
      model:
        type: string
      tokens:
        $ref: '#/definitions/model.RerankMetaTokens'
    type: object
  model.RerankMetaTokens:
    properties:
      input_tokens:
        type: integer
      output_tokens:
        type: integer
    type: object
  model.RerankRequest:
    properties:
      documents:
        items:
          type: string
        type: array
      max_chunks_per_doc:
        type: integer
      model:
        type: string
      overlap_tokens:
        type: integer
      query:
        type: string
      return_documents:
        type: boolean
      top_n:
        type: integer
    type: object
  model.RerankResponse:
    properties:
      id:
        type: string
      meta:
        $ref: '#/definitions/model.RerankMeta'
      results:
        items:
          $ref: '#/definitions/model.RerankResult'
        type: array
    type: object
  model.RerankResult:
    properties:
      document:
        $ref: '#/definitions/model.Document'
      index:
        type: integer
      relevance_score:
        type: number
    type: object
  model.ResponseFormat:
    properties:
      json_schema:
        $ref: '#/definitions/model.JSONSchema'
      type:
        type: string
    type: object
  model.StreamOptions:
    properties:
      include_usage:
        type: boolean
    type: object
  model.SttJSONResponse:
    properties:
      text:
        type: string
    type: object
  model.TextResponse:
    properties:
      choices:
        items:
          $ref: '#/definitions/model.TextResponseChoice'
        type: array
      created:
        type: integer
      id:
        type: string
      model:
        type: string
      object:
        type: string
      usage:
        $ref: '#/definitions/github_com_labring_aiproxy_relay_model.Usage'
    type: object
  model.TextResponseChoice:
    properties:
      finish_reason:
        type: string
      index:
        type: integer
      message:
        $ref: '#/definitions/model.Message'
      text:
        type: string
    type: object
  model.TextToSpeechRequest:
    properties:
      input:
        type: string
      model:
        type: string
      response_format:
        type: string
      speed:
        type: number
      voice:
        type: string
    required:
    - input
    - model
    - voice
    type: object
  model.Tool:
    properties:
      function:
        $ref: '#/definitions/model.Function'
      id:
        type: string
      type:
        type: string
    type: object
  openai.SubscriptionResponse:
    properties:
      access_until:
        type: integer
      hard_limit_usd:
        type: number
      has_payment_method:
        type: boolean
      object:
        type: string
      soft_limit_usd:
        type: number
      system_hard_limit_usd:
        type: number
    type: object
  openai.UsageResponse:
    properties:
      object:
        type: string
      total_usage:
        description: DailyCosts []OpenAIUsageDailyCost `json:"daily_costs"`
        type: number
    type: object
info:
  contact: {}
paths:
  /api/channel:
    post:
      consumes:
      - application/json
      description: Adds a new channel to the system
      parameters:
      - description: Channel information
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/controller.AddChannelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Add a single channel
      tags:
      - channel
  /api/channel/{id}:
    delete:
      description: Deletes a channel by its ID
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a channel
      tags:
      - channel
    get:
      description: Returns detailed information about a specific channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Channel'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get a channel by ID
      tags:
      - channel
    put:
      consumes:
      - application/json
      description: Updates an existing channel by its ID
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated channel information
        in: body
        name: channel
        required: true
        schema:
          $ref: '#/definitions/controller.AddChannelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Channel'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update a channel
      tags:
      - channel
  /api/channel/{id}/{model}:
    get:
      description: Tests a single model in the channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Model name
        in: path
        name: model
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ChannelTest'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Test channel model
      tags:
      - channel
  /api/channel/{id}/balance:
    get:
      description: Updates the balance for a single channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  type: number
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update channel balance
      tags:
      - channel
  /api/channel/{id}/models:
    get:
      description: Tests all models in the channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Return success
        in: query
        name: return_success
        type: boolean
      - description: Success body
        in: query
        name: success_body
        type: boolean
      - description: Stream
        in: query
        name: stream
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controller.TestResult'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Test channel models
      tags:
      - channel
  /api/channel/{id}/status:
    post:
      consumes:
      - application/json
      description: Updates the status of a channel by its ID
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Status information
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateChannelStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update channel status
      tags:
      - channel
  /api/channels:
    get:
      description: Returns a paginated list of channels with optional filters
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Filter by id
        in: query
        name: id
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by channel type
        in: query
        name: channel_type
        type: integer
      - description: Filter by base URL
        in: query
        name: base_url
        type: string
      - description: Order by field
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        channels:
                          items:
                            $ref: '#/definitions/model.Channel'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get channels with pagination
      tags:
      - channels
    post:
      consumes:
      - application/json
      description: Adds multiple channels in a batch operation
      parameters:
      - description: Channel information
        in: body
        name: channels
        required: true
        schema:
          items:
            $ref: '#/definitions/controller.AddChannelRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Add multiple channels
      tags:
      - channels
  /api/channels/all:
    get:
      description: Returns a list of all channels without pagination
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Channel'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all channels
      tags:
      - channels
  /api/channels/balance:
    get:
      description: Updates the balance for all channels
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update all channels balance
      tags:
      - channel
  /api/channels/batch_delete:
    post:
      consumes:
      - application/json
      description: Deletes multiple channels by their IDs
      parameters:
      - description: Channel IDs
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete multiple channels
      tags:
      - channels
  /api/channels/import/oneapi:
    post:
      description: Imports channels from OneAPI
      parameters:
      - description: Import channel from OneAPI request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controller.ImportChannelFromOneAPIRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items: {}
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Import channel from OneAPI
      tags:
      - channels
  /api/channels/search:
    get:
      description: Search channels with keyword and optional filters
      parameters:
      - description: Search keyword
        in: query
        name: keyword
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Filter by id
        in: query
        name: id
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by channel type
        in: query
        name: channel_type
        type: integer
      - description: Filter by base URL
        in: query
        name: base_url
        type: string
      - description: Order by field
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        channels:
                          items:
                            $ref: '#/definitions/model.Channel'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Search channels
      tags:
      - channels
  /api/channels/test:
    get:
      description: Tests all channels
      parameters:
      - description: Test disabled
        in: query
        name: test_disabled
        type: boolean
      - description: Return success
        in: query
        name: return_success
        type: boolean
      - description: Success body
        in: query
        name: success_body
        type: boolean
      - description: Stream
        in: query
        name: stream
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controller.TestResult'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Test all channels
      tags:
      - channel
  /api/channels/type_metas:
    get:
      description: Returns metadata for all channel types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    $ref: '#/definitions/channeltype.AdaptorMeta'
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel type metadata
      tags:
      - channels
  /api/channels/type_names:
    get:
      description: Returns a list of all available channel type names
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all channel type names
      tags:
      - channels
  /api/dashboard:
    get:
      description: Returns the general dashboard data including usage statistics and
        metrics
      parameters:
      - description: Group or *
        in: query
        name: group
        type: string
      - description: Channel ID
        in: query
        name: channel
        type: integer
      - description: Type of time span (day, week, month, two_week)
        in: query
        name: type
        type: string
      - description: Model name
        in: query
        name: model
        type: string
      - description: Only return result
        in: query
        name: result_only
        type: boolean
      - description: Token usage
        in: query
        name: token_usage
        type: boolean
      - description: Start timestamp
        in: query
        name: start_timestamp
        type: integer
      - description: End timestamp
        in: query
        name: end_timestamp
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.DashboardResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get dashboard data
      tags:
      - dashboard
  /api/dashboard/{group}:
    get:
      description: Returns dashboard data and metrics specific to the given group
      parameters:
      - description: Group
        in: path
        name: group
        required: true
        type: string
      - description: Type of time span (day, week, month, two_week)
        in: query
        name: type
        type: string
      - description: Token name
        in: query
        name: token_name
        type: string
      - description: Model or *
        in: query
        name: model
        type: string
      - description: Only return result
        in: query
        name: result_only
        type: boolean
      - description: Token usage
        in: query
        name: token_usage
        type: boolean
      - description: Start timestamp
        in: query
        name: start_timestamp
        type: integer
      - description: End timestamp
        in: query
        name: end_timestamp
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.GroupDashboardResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get dashboard data for a specific group
      tags:
      - dashboard
  /api/dashboard/{group}/models:
    get:
      description: Returns model-specific metrics and usage data for the given group
      parameters:
      - description: Group
        in: path
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.ModelConfig'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get model usage data for a specific group
      tags:
      - dashboard
  /api/group/{group}:
    delete:
      description: Deletes a group by its name
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a group
      tags:
      - group
    get:
      description: Returns detailed information about a specific group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controller.GroupResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get a group
      tags:
      - group
    post:
      consumes:
      - application/json
      description: Creates a new group with the given information
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Group information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Group'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new group
      tags:
      - group
    put:
      consumes:
      - application/json
      description: Updates an existing group with the given information
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Updated group information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Group'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update a group
      tags:
      - group
  /api/group/{group}/model_config/:
    post:
      consumes:
      - application/json
      description: Save group model config
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Group model config information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.SaveGroupModelConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Save group model config
      tags:
      - group
  /api/group/{group}/model_config/{model}:
    delete:
      description: Delete group model config
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Model name
        in: path
        name: model
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete group model config
      tags:
      - group
    get:
      description: Get group model config
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Model name
        in: path
        name: model
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.GroupModelConfig'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get group model config
      tags:
      - group
    put:
      consumes:
      - application/json
      description: Update group model config
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Model name
        in: path
        name: model
        required: true
        type: string
      - description: Group model config information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.SaveGroupModelConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update group model config
      tags:
      - group
  /api/group/{group}/model_configs/:
    delete:
      description: Delete group model configs
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Model names
        in: body
        name: models
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete group model configs
      tags:
      - group
    get:
      description: Get group model configs
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.GroupModelConfig'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get group model configs
      tags:
      - group
    post:
      consumes:
      - application/json
      description: Save group model configs
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Group model config information
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/controller.SaveGroupModelConfigRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Save group model configs
      tags:
      - group
    put:
      consumes:
      - application/json
      description: Update group model configs
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Group model config information
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/controller.SaveGroupModelConfigRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update group model configs
      tags:
      - group
  /api/group/{group}/rpm_ratio:
    post:
      consumes:
      - application/json
      description: Updates the RPM (Requests Per Minute) ratio for a group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: RPM ratio information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateGroupRPMRatioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update group RPM ratio
      tags:
      - group
  /api/group/{group}/status:
    post:
      consumes:
      - application/json
      description: Updates the status of a group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Status information
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateGroupStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update group status
      tags:
      - group
  /api/group/{group}/tpm_ratio:
    post:
      consumes:
      - application/json
      description: Updates the TPM (Tokens Per Minute) ratio for a group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: TPM ratio information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateGroupTPMRatioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update group TPM ratio
      tags:
      - group
  /api/groups:
    get:
      description: Returns a list of all groups with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        groups:
                          items:
                            $ref: '#/definitions/controller.GroupResponse'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all groups
      tags:
      - groups
  /api/groups/batch_delete:
    post:
      consumes:
      - application/json
      description: Deletes multiple groups by their IDs
      parameters:
      - description: Group IDs
        in: body
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete multiple groups
      tags:
      - groups
  /api/groups/batch_status:
    post:
      consumes:
      - application/json
      description: Updates the status of multiple groups
      parameters:
      - description: Group IDs and status
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateGroupsStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update multiple groups status
      tags:
      - groups
  /api/groups/ip_groups:
    get:
      description: Get IP group list
      parameters:
      - description: Threshold
        in: query
        name: threshold
        type: integer
      - description: Start timestamp
        in: query
        name: start_timestamp
        type: integer
      - description: End timestamp
        in: query
        name: end_timestamp
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get IP group list
      tags:
      - groups
  /api/groups/search:
    get:
      description: Search groups with keyword and pagination
      parameters:
      - description: Search keyword
        in: query
        name: keyword
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Status
        in: query
        name: status
        type: integer
      - description: Order
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        groups:
                          items:
                            $ref: '#/definitions/controller.GroupResponse'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Search groups
      tags:
      - groups
  /api/log/{group}:
    get:
      description: Get logs for a specific group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Start timestamp (milliseconds)
        in: query
        name: start_timestamp
        type: integer
      - description: End timestamp (milliseconds)
        in: query
        name: end_timestamp
        type: integer
      - description: Token name
        in: query
        name: token_name
        type: string
      - description: Model name
        in: query
        name: model_name
        type: string
      - description: Channel ID
        in: query
        name: channel
        type: integer
      - description: Endpoint
        in: query
        name: endpoint
        type: string
      - description: Token ID
        in: query
        name: token_id
        type: integer
      - description: Order
        in: query
        name: order
        type: string
      - description: Request ID
        in: query
        name: request_id
        type: string
      - description: Mode
        in: query
        name: mode
        type: integer
      - description: Code type
        in: query
        name: code_type
        type: string
      - description: With body
        in: query
        name: with_body
        type: boolean
      - description: IP
        in: query
        name: ip
        type: string
      - description: Result only
        in: query
        name: result_only
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.GetGroupLogsResult'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get group logs
      tags:
      - log
  /api/log/{group}/detail/{log_id}:
    get:
      description: Get detailed information about a specific log entry in a group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Log ID
        in: path
        name: log_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.RequestDetail'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get group log detail
      tags:
      - log
  /api/log/{group}/search:
    get:
      description: Search logs for a specific group with filters
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Keyword
        in: query
        name: keyword
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Start timestamp (milliseconds)
        in: query
        name: start_timestamp
        type: integer
      - description: End timestamp (milliseconds)
        in: query
        name: end_timestamp
        type: integer
      - description: Filter by token name
        in: query
        name: token_name
        type: string
      - description: Filter by model name
        in: query
        name: model_name
        type: string
      - description: Filter by channel
        in: query
        name: channel
        type: integer
      - description: Filter by endpoint
        in: query
        name: endpoint
        type: string
      - description: Filter by token id
        in: query
        name: token_id
        type: integer
      - description: Order
        in: query
        name: order
        type: string
      - description: Request ID
        in: query
        name: request_id
        type: string
      - description: Mode
        in: query
        name: mode
        type: integer
      - description: Code type
        in: query
        name: code_type
        type: string
      - description: With body
        in: query
        name: with_body
        type: boolean
      - description: IP
        in: query
        name: ip
        type: string
      - description: Result only
        in: query
        name: result_only
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.GetGroupLogsResult'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Search group logs
      tags:
      - log
  /api/log/{group}/used/models:
    get:
      description: Get a list of models that have been used in a specific group's
        logs
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get group used models
      tags:
      - log
  /api/log/{group}/used/token_names:
    get:
      description: Get a list of token names that have been used in a specific group's
        logs
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get group used token names
      tags:
      - log
  /api/logs:
    delete:
      description: Deletes logs older than the specified retention period
      parameters:
      - description: Timestamp (milliseconds)
        in: query
        name: timestamp
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  type: integer
              type: object
      security:
      - ApiKeyAuth: []
      summary: Delete historical logs
      tags:
      - logs
    get:
      description: Returns a paginated list of all logs with optional filters
      parameters:
      - description: Group or *
        in: query
        name: group
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Start timestamp (milliseconds)
        in: query
        name: start_timestamp
        type: integer
      - description: End timestamp (milliseconds)
        in: query
        name: end_timestamp
        type: integer
      - description: Token name
        in: query
        name: token_name
        type: string
      - description: Model name
        in: query
        name: model_name
        type: string
      - description: Channel ID
        in: query
        name: channel
        type: integer
      - description: Endpoint
        in: query
        name: endpoint
        type: string
      - description: Token ID
        in: query
        name: token_id
        type: integer
      - description: Order
        in: query
        name: order
        type: string
      - description: Mode
        in: query
        name: mode
        type: integer
      - description: Request ID
        in: query
        name: request_id
        type: string
      - description: Code type
        in: query
        name: code_type
        type: string
      - description: With body
        in: query
        name: with_body
        type: boolean
      - description: IP
        in: query
        name: ip
        type: string
      - description: Result only
        in: query
        name: result_only
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.GetLogsResult'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all logs
      tags:
      - logs
  /api/logs/consume_error:
    get:
      description: Search for logs with consumption errors
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Start timestamp (milliseconds)
        in: query
        name: start_timestamp
        type: integer
      - description: End timestamp (milliseconds)
        in: query
        name: end_timestamp
        type: integer
      - description: Keyword
        in: query
        name: keyword
        type: string
      - description: Group
        in: query
        name: group
        type: string
      - description: Token name
        in: query
        name: token_name
        type: string
      - description: Model name
        in: query
        name: model_name
        type: string
      - description: Content
        in: query
        name: content
        type: string
      - description: Token ID
        in: query
        name: token_id
        type: integer
      - description: Order
        in: query
        name: order
        type: string
      - description: Request ID
        in: query
        name: request_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        logs:
                          items:
                            $ref: '#/definitions/model.RequestDetail'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Search consumption errors
      tags:
      - logs
  /api/logs/detail/{log_id}:
    get:
      description: Get detailed information about a specific log entry
      parameters:
      - description: Log ID
        in: path
        name: log_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.RequestDetail'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get log detail
      tags:
      - logs
  /api/logs/search:
    get:
      description: Search logs with various filters
      parameters:
      - description: Group or *
        in: query
        name: group
        type: string
      - description: Keyword
        in: query
        name: keyword
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Start timestamp (milliseconds)
        in: query
        name: start_timestamp
        type: integer
      - description: End timestamp (milliseconds)
        in: query
        name: end_timestamp
        type: integer
      - description: Filter by token name
        in: query
        name: token_name
        type: string
      - description: Filter by model name
        in: query
        name: model_name
        type: string
      - description: Filter by channel
        in: query
        name: channel
        type: integer
      - description: Filter by endpoint
        in: query
        name: endpoint
        type: string
      - description: Filter by token id
        in: query
        name: token_id
        type: integer
      - description: Order
        in: query
        name: order
        type: string
      - description: Request ID
        in: query
        name: request_id
        type: string
      - description: Mode
        in: query
        name: mode
        type: integer
      - description: Code type
        in: query
        name: code_type
        type: string
      - description: With body
        in: query
        name: with_body
        type: boolean
      - description: IP
        in: query
        name: ip
        type: string
      - description: Result only
        in: query
        name: result_only
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.GetLogsResult'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Search logs
      tags:
      - logs
  /api/logs/used/models:
    get:
      description: Get a list of models that have been used in logs
      parameters:
      - description: Group or *
        in: query
        name: group
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get used models
      tags:
      - logs
  /api/logs/used/token_names:
    get:
      description: Get a list of token names that have been used in logs
      parameters:
      - description: Group or *
        in: query
        name: group
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get used token names
      tags:
      - logs
  /api/model_config:
    post:
      description: Saves a model config
      parameters:
      - description: Model config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/controller.SaveModelConfigsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Save model config
      tags:
      - modelconfig
  /api/model_config/{model}:
    delete:
      description: Deletes a model config
      parameters:
      - description: Model name
        in: path
        name: model
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete model config
      tags:
      - modelconfig
    get:
      description: Returns a model config
      parameters:
      - description: Model name
        in: path
        name: model
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.ModelConfig'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get model config
      tags:
      - modelconfig
  /api/model_configs:
    get:
      description: Returns a list of model configs with pagination
      parameters:
      - description: Model name
        in: query
        name: model
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        configs:
                          items:
                            $ref: '#/definitions/model.ModelConfig'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get model configs
      tags:
      - modelconfig
    post:
      description: Saves a list of model configs
      parameters:
      - description: Model configs
        in: body
        name: configs
        required: true
        schema:
          items:
            $ref: '#/definitions/controller.SaveModelConfigsRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Save model configs
      tags:
      - modelconfig
  /api/model_configs/all:
    get:
      description: Returns a list of all model configs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.ModelConfig'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all model configs
      tags:
      - modelconfig
  /api/model_configs/batch_delete:
    post:
      description: Deletes a list of model configs
      parameters:
      - description: Model names
        in: body
        name: models
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete model configs
      tags:
      - modelconfig
  /api/model_configs/contains:
    post:
      description: Returns a list of model configs by models contains
      parameters:
      - description: Models
        in: body
        name: models
        required: true
        schema:
          $ref: '#/definitions/controller.GetModelConfigsByModelsContainsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.ModelConfig'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get model configs by models contains
      tags:
      - modelconfig
  /api/model_configs/search:
    get:
      description: Returns a list of model configs by keyword
      parameters:
      - description: Keyword
        in: query
        name: keyword
        type: string
      - description: Model name
        in: query
        name: model
        type: string
      - description: Owner
        in: query
        name: owner
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Per page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        configs:
                          items:
                            $ref: '#/definitions/model.ModelConfig'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Search model configs
      tags:
      - modelconfig
  /api/model_cost_rank:
    get:
      description: Returns ranking data for models based on cost
      parameters:
      - description: Group or *
        in: query
        name: group
        type: string
      - description: Channel ID
        in: query
        name: channel
        type: integer
      - description: Start timestamp
        in: query
        name: start_timestamp
        type: integer
      - description: End timestamp
        in: query
        name: end_timestamp
        type: integer
      - description: Token usage
        in: query
        name: token_usage
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.ModelCostRank'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get model cost ranking data
      tags:
      - dashboard
  /api/model_cost_rank/{group}:
    get:
      description: Returns model cost ranking data specific to the given group
      parameters:
      - description: Group
        in: path
        name: group
        required: true
        type: string
      - description: Start timestamp
        in: query
        name: start_timestamp
        type: integer
      - description: End timestamp
        in: query
        name: end_timestamp
        type: integer
      - description: Token usage
        in: query
        name: token_usage
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.ModelCostRank'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get model cost ranking data for a specific group
      tags:
      - dashboard
  /api/models/builtin:
    get:
      description: Returns a list of builtin models
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controller.BuiltinModelConfig'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get builtin models
      tags:
      - model
  /api/models/builtin/channel:
    get:
      description: Returns a list of channel builtin models
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    items:
                      $ref: '#/definitions/controller.BuiltinModelConfig'
                    type: array
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel builtin models
      tags:
      - model
  /api/models/builtin/channel/{type}:
    get:
      description: Returns a list of channel builtin models by type
      parameters:
      - description: Channel type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controller.BuiltinModelConfig'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel builtin models by type
      tags:
      - model
  /api/models/default:
    get:
      description: Returns a list of channel default models and mapping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        mapping:
                          additionalProperties:
                            type: string
                          type: object
                        models:
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel default models and mapping
      tags:
      - model
  /api/models/default/{type}:
    get:
      description: Returns a list of channel default models and mapping by type
      parameters:
      - description: Channel type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        mapping:
                          additionalProperties:
                            type: string
                          type: object
                        models:
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel default models and mapping by type
      tags:
      - model
  /api/models/enabled:
    get:
      description: Returns a list of enabled models
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    items:
                      $ref: '#/definitions/model.ModelConfig'
                    type: array
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get enabled models
      tags:
      - model
  /api/monitor:
    delete:
      description: Clears all model errors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Clear all model errors
      tags:
      - monitor
    get:
      description: Returns a list of all channel model error rates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    additionalProperties:
                      type: number
                    type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all channel model error rates
      tags:
      - monitor
  /api/monitor/{id}:
    delete:
      description: Clears all model errors for a specific channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Clear channel all model errors
      tags:
      - monitor
    get:
      description: Returns a list of channel model error rates
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  items:
                    additionalProperties:
                      type: number
                    type: object
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get channel model error rates
      tags:
      - monitor
  /api/monitor/{id}/{model}:
    delete:
      description: Clears model errors for a specific channel and model
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Model name
        in: path
        name: model
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Clear channel model errors
      tags:
      - monitor
  /api/monitor/banned_channels:
    get:
      description: Returns a list of all banned model channels
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    items:
                      type: integer
                    type: array
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all banned model channels
      tags:
      - monitor
  /api/monitor/models:
    get:
      description: Returns a list of models error rate
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    type: number
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get models error rate
      tags:
      - monitor
  /api/options:
    get:
      description: Returns a list of options
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get options
      tags:
      - option
    post:
      description: Updates multiple options
      parameters:
      - description: Options
        in: body
        name: options
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update options
      tags:
      - option
  /api/options/:
    post:
      description: Updates a single option
      parameters:
      - description: Option value
        in: body
        name: value
        required: true
        schema:
          $ref: '#/definitions/model.Option'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update option
      tags:
      - option
    put:
      description: Updates a single option
      parameters:
      - description: Option value
        in: body
        name: value
        required: true
        schema:
          $ref: '#/definitions/model.Option'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update option
      tags:
      - option
  /api/options/{key}:
    get:
      description: Returns a single option
      parameters:
      - description: Option key
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Option'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get option
      tags:
      - option
    put:
      description: Updates a single option by key
      parameters:
      - description: Option key
        in: path
        name: key
        required: true
        type: string
      - description: Option value
        in: body
        name: value
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update option by key
      tags:
      - option
  /api/status:
    get:
      description: Returns the status of the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controller.StatusData'
              type: object
      summary: Get status
      tags:
      - misc
  /api/token/{group}:
    post:
      consumes:
      - application/json
      description: Adds a new token to a specific group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Auto create group
        in: query
        name: auto_create_group
        type: boolean
      - description: Token information
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/controller.AddTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controller.TokenResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Add group token
      tags:
      - token
  /api/token/{group}/{id}:
    delete:
      description: Deletes a specific token from a group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Token ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete group token
      tags:
      - token
    get:
      description: Returns detailed information about a specific token for a specific
        group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Token ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controller.TokenResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get token by ID for a specific group
      tags:
      - token
    put:
      consumes:
      - application/json
      description: Updates an existing token in a specific group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Token ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated token information
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/controller.AddTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controller.TokenResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update group token
      tags:
      - token
  /api/token/{group}/{id}/name:
    post:
      consumes:
      - application/json
      description: Updates the name of a token in a specific group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Token ID
        in: path
        name: id
        required: true
        type: integer
      - description: Name information
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateTokenNameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update group token name
      tags:
      - token
  /api/token/{group}/{id}/status:
    post:
      consumes:
      - application/json
      description: Updates the status of a token in a specific group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Token ID
        in: path
        name: id
        required: true
        type: integer
      - description: Status information
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateTokenStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update group token status
      tags:
      - token
  /api/token/{group}/batch_delete:
    post:
      description: Deletes multiple tokens from a specific group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Token IDs
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete group tokens
      tags:
      - token
  /api/token/{group}/search:
    get:
      description: Returns a paginated list of tokens for a specific group based on
        search criteria
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Keyword
        in: query
        name: keyword
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Order
        in: query
        name: order
        type: string
      - description: Name
        in: query
        name: name
        type: string
      - description: Key
        in: query
        name: key
        type: string
      - description: Status
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        tokens:
                          items:
                            $ref: '#/definitions/controller.TokenResponse'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Search tokens for a specific group
      tags:
      - token
  /api/tokens:
    get:
      description: Returns a paginated list of all tokens
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Group name
        in: query
        name: group
        type: string
      - description: Order
        in: query
        name: order
        type: string
      - description: Status
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        tokens:
                          items:
                            $ref: '#/definitions/controller.TokenResponse'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all tokens
      tags:
      - tokens
  /api/tokens/{group}:
    get:
      description: Returns a paginated list of all tokens for a specific group
      parameters:
      - description: Group name
        in: path
        name: group
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Order
        in: query
        name: order
        type: string
      - description: Status
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        tokens:
                          items:
                            $ref: '#/definitions/controller.TokenResponse'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get all tokens for a specific group
      tags:
      - tokens
  /api/tokens/{id}:
    delete:
      description: Deletes a specific token by ID
      parameters:
      - description: Token ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete token
      tags:
      - tokens
    get:
      description: Returns detailed information about a specific token
      parameters:
      - description: Token ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controller.TokenResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get token by ID
      tags:
      - tokens
    put:
      consumes:
      - application/json
      description: Updates an existing token's information
      parameters:
      - description: Token ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated token information
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/controller.AddTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controller.TokenResponse'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update token
      tags:
      - tokens
  /api/tokens/{id}/name:
    post:
      consumes:
      - application/json
      description: Updates the name of a specific token
      parameters:
      - description: Token ID
        in: path
        name: id
        required: true
        type: integer
      - description: Name information
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateTokenNameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update token name
      tags:
      - tokens
  /api/tokens/{id}/status:
    post:
      consumes:
      - application/json
      description: Updates the status of a specific token
      parameters:
      - description: Token ID
        in: path
        name: id
        required: true
        type: integer
      - description: Status information
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateTokenStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update token status
      tags:
      - tokens
  /api/tokens/batch_delete:
    post:
      consumes:
      - application/json
      description: Deletes multiple tokens by their IDs
      parameters:
      - description: Token IDs
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/middleware.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete multiple tokens
      tags:
      - tokens
  /api/tokens/search:
    get:
      description: Returns a paginated list of tokens based on search criteria
      parameters:
      - description: Keyword
        in: query
        name: keyword
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Order
        in: query
        name: order
        type: string
      - description: Name
        in: query
        name: name
        type: string
      - description: Key
        in: query
        name: key
        type: string
      - description: Status
        in: query
        name: status
        type: integer
      - description: Group
        in: query
        name: group
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/middleware.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    allOf:
                    - {}
                    - properties:
                        tokens:
                          items:
                            $ref: '#/definitions/controller.TokenResponse'
                          type: array
                        total:
                          type: integer
                      type: object
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: Search tokens
      tags:
      - tokens
  /v1/audio/speech:
    post:
      description: AudioSpeech
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.TextToSpeechRequest'
      - description: Optional Aiproxy-Channel header
        in: header
        name: Aiproxy-Channel
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: audio binary
          headers:
            X-RateLimit-Limit-Requests:
              description: X-RateLimit-Limit-Requests
              type: integer
            X-RateLimit-Limit-Tokens:
              description: X-RateLimit-Limit-Tokens
              type: integer
            X-RateLimit-Remaining-Requests:
              description: X-RateLimit-Remaining-Requests
              type: integer
            X-RateLimit-Remaining-Tokens:
              description: X-RateLimit-Remaining-Tokens
              type: integer
            X-RateLimit-Reset-Requests:
              description: X-RateLimit-Reset-Requests
              type: string
            X-RateLimit-Reset-Tokens:
              description: X-RateLimit-Reset-Tokens
              type: string
          schema:
            type: file
      security:
      - ApiKeyAuth: []
      summary: AudioSpeech
      tags:
      - relay
  /v1/audio/transcription:
    post:
      description: AudioTranscription
      parameters:
      - description: Model
        in: formData
        name: model
        required: true
        type: string
      - description: File
        in: formData
        name: file
        required: true
        type: file
      - description: Optional Aiproxy-Channel header
        in: header
        name: Aiproxy-Channel
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-RateLimit-Limit-Requests:
              description: X-RateLimit-Limit-Requests
              type: integer
            X-RateLimit-Limit-Tokens:
              description: X-RateLimit-Limit-Tokens
              type: integer
            X-RateLimit-Remaining-Requests:
              description: X-RateLimit-Remaining-Requests
              type: integer
            X-RateLimit-Remaining-Tokens:
              description: X-RateLimit-Remaining-Tokens
              type: integer
            X-RateLimit-Reset-Requests:
              description: X-RateLimit-Reset-Requests
              type: string
            X-RateLimit-Reset-Tokens:
              description: X-RateLimit-Reset-Tokens
              type: string
          schema:
            $ref: '#/definitions/model.SttJSONResponse'
      security:
      - ApiKeyAuth: []
      summary: AudioTranscription
      tags:
      - relay
  /v1/audio/translation:
    post:
      description: AudioTranslation
      parameters:
      - description: Model
        in: formData
        name: model
        required: true
        type: string
      - description: File
        in: formData
        name: file
        required: true
        type: file
      - description: Optional Aiproxy-Channel header
        in: header
        name: Aiproxy-Channel
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-RateLimit-Limit-Requests:
              description: X-RateLimit-Limit-Requests
              type: integer
            X-RateLimit-Limit-Tokens:
              description: X-RateLimit-Limit-Tokens
              type: integer
            X-RateLimit-Remaining-Requests:
              description: X-RateLimit-Remaining-Requests
              type: integer
            X-RateLimit-Remaining-Tokens:
              description: X-RateLimit-Remaining-Tokens
              type: integer
            X-RateLimit-Reset-Requests:
              description: X-RateLimit-Reset-Requests
              type: string
            X-RateLimit-Reset-Tokens:
              description: X-RateLimit-Reset-Tokens
              type: string
          schema:
            $ref: '#/definitions/model.SttJSONResponse'
      security:
      - ApiKeyAuth: []
      summary: AudioTranslation
      tags:
      - relay
  /v1/chat/completions:
    post:
      description: ChatCompletions
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.GeneralOpenAIRequest'
      - description: Optional Aiproxy-Channel header
        in: header
        name: Aiproxy-Channel
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-RateLimit-Limit-Requests:
              description: X-RateLimit-Limit-Requests
              type: integer
            X-RateLimit-Limit-Tokens:
              description: X-RateLimit-Limit-Tokens
              type: integer
            X-RateLimit-Remaining-Requests:
              description: X-RateLimit-Remaining-Requests
              type: integer
            X-RateLimit-Remaining-Tokens:
              description: X-RateLimit-Remaining-Tokens
              type: integer
            X-RateLimit-Reset-Requests:
              description: X-RateLimit-Reset-Requests
              type: string
            X-RateLimit-Reset-Tokens:
              description: X-RateLimit-Reset-Tokens
              type: string
          schema:
            $ref: '#/definitions/model.TextResponse'
      security:
      - ApiKeyAuth: []
      summary: ChatCompletions
      tags:
      - relay
  /v1/completions:
    post:
      description: Completions
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.GeneralOpenAIRequest'
      - description: Optional Aiproxy-Channel header
        in: header
        name: Aiproxy-Channel
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-RateLimit-Limit-Requests:
              description: X-RateLimit-Limit-Requests
              type: integer
            X-RateLimit-Limit-Tokens:
              description: X-RateLimit-Limit-Tokens
              type: integer
            X-RateLimit-Remaining-Requests:
              description: X-RateLimit-Remaining-Requests
              type: integer
            X-RateLimit-Remaining-Tokens:
              description: X-RateLimit-Remaining-Tokens
              type: integer
            X-RateLimit-Reset-Requests:
              description: X-RateLimit-Reset-Requests
              type: string
            X-RateLimit-Reset-Tokens:
              description: X-RateLimit-Reset-Tokens
              type: string
          schema:
            $ref: '#/definitions/model.TextResponse'
      security:
      - ApiKeyAuth: []
      summary: Completions
      tags:
      - relay
  /v1/dashboard/subscription:
    get:
      description: Get subscription
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/openai.SubscriptionResponse'
      security:
      - ApiKeyAuth: []
      summary: Get subscription
      tags:
      - relay
  /v1/dashboard/usage:
    get:
      description: Get usage
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/openai.UsageResponse'
      security:
      - ApiKeyAuth: []
      summary: Get usage
      tags:
      - relay
  /v1/embeddings:
    post:
      description: Embeddings
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.EmbeddingRequest'
      - description: Optional Aiproxy-Channel header
        in: header
        name: Aiproxy-Channel
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-RateLimit-Limit-Requests:
              description: X-RateLimit-Limit-Requests
              type: integer
            X-RateLimit-Limit-Tokens:
              description: X-RateLimit-Limit-Tokens
              type: integer
            X-RateLimit-Remaining-Requests:
              description: X-RateLimit-Remaining-Requests
              type: integer
            X-RateLimit-Remaining-Tokens:
              description: X-RateLimit-Remaining-Tokens
              type: integer
            X-RateLimit-Reset-Requests:
              description: X-RateLimit-Reset-Requests
              type: string
            X-RateLimit-Reset-Tokens:
              description: X-RateLimit-Reset-Tokens
              type: string
          schema:
            $ref: '#/definitions/model.EmbeddingResponse'
      security:
      - ApiKeyAuth: []
      summary: Embeddings
      tags:
      - relay
  /v1/images/generations:
    post:
      description: ImagesGenerations
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ImageRequest'
      - description: Optional Aiproxy-Channel header
        in: header
        name: Aiproxy-Channel
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-RateLimit-Limit-Requests:
              description: X-RateLimit-Limit-Requests
              type: integer
            X-RateLimit-Limit-Tokens:
              description: X-RateLimit-Limit-Tokens
              type: integer
            X-RateLimit-Remaining-Requests:
              description: X-RateLimit-Remaining-Requests
              type: integer
            X-RateLimit-Remaining-Tokens:
              description: X-RateLimit-Remaining-Tokens
              type: integer
            X-RateLimit-Reset-Requests:
              description: X-RateLimit-Reset-Requests
              type: string
            X-RateLimit-Reset-Tokens:
              description: X-RateLimit-Reset-Tokens
              type: string
          schema:
            $ref: '#/definitions/model.ImageResponse'
      security:
      - ApiKeyAuth: []
      summary: ImagesGenerations
      tags:
      - relay
  /v1/models:
    get:
      description: List all models
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                items:
                  $ref: '#/definitions/controller.OpenAIModels'
                type: array
              object:
                type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List models
      tags:
      - relay
  /v1/models/{model}:
    get:
      description: Retrieve a model
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.OpenAIModels'
      security:
      - ApiKeyAuth: []
      summary: Retrieve model
      tags:
      - relay
  /v1/parse-pdf:
    post:
      description: ParsePdf
      parameters:
      - description: Model
        in: formData
        name: model
        required: true
        type: string
      - description: File
        in: formData
        name: file
        required: true
        type: file
      - description: Optional Aiproxy-Channel header
        in: header
        name: Aiproxy-Channel
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-RateLimit-Limit-Requests:
              description: X-RateLimit-Limit-Requests
              type: integer
            X-RateLimit-Limit-Tokens:
              description: X-RateLimit-Limit-Tokens
              type: integer
            X-RateLimit-Remaining-Requests:
              description: X-RateLimit-Remaining-Requests
              type: integer
            X-RateLimit-Remaining-Tokens:
              description: X-RateLimit-Remaining-Tokens
              type: integer
            X-RateLimit-Reset-Requests:
              description: X-RateLimit-Reset-Requests
              type: string
            X-RateLimit-Reset-Tokens:
              description: X-RateLimit-Reset-Tokens
              type: string
          schema:
            $ref: '#/definitions/model.ParsePdfResponse'
      security:
      - ApiKeyAuth: []
      summary: ParsePdf
      tags:
      - relay
  /v1/rerank:
    post:
      description: Rerank
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RerankRequest'
      - description: Optional Aiproxy-Channel header
        in: header
        name: Aiproxy-Channel
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-RateLimit-Limit-Requests:
              description: X-RateLimit-Limit-Requests
              type: integer
            X-RateLimit-Limit-Tokens:
              description: X-RateLimit-Limit-Tokens
              type: integer
            X-RateLimit-Remaining-Requests:
              description: X-RateLimit-Remaining-Requests
              type: integer
            X-RateLimit-Remaining-Tokens:
              description: X-RateLimit-Remaining-Tokens
              type: integer
            X-RateLimit-Reset-Requests:
              description: X-RateLimit-Reset-Requests
              type: string
            X-RateLimit-Reset-Tokens:
              description: X-RateLimit-Reset-Tokens
              type: string
          schema:
            $ref: '#/definitions/model.RerankResponse'
      security:
      - ApiKeyAuth: []
      summary: Rerank
      tags:
      - relay
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
